# zsh default shell
set-option -g default-shell $SHELL

unbind C-b
# C-b is not acceptable -- Vim uses it
#
set -g prefix C-Space
bind Space send-prefix

# quick C-f C-f to go to last window
bind-key C-f last-window

# Allows for faster key repetition
set -s escape-time 0

# Start numbering at 1
set -g base-index 1
set -g pane-base-index 1

set-option -g mouse on

setw -g mode-keys vi
# vim
bind [ copy-mode
bind -t vi-copy v begin-selection
# bind -t vi-copy y copy-selection
bind -t vi-copy V rectangle-toggle
bind ] paste-buffer
# choose text buffer to paste
bind Space choose-buffer
bind -t vi-copy Escape cancel

bind-key l select-pane -L
bind-key h select-pane -R
bind-key k select-pane -U
bind-key j select-pane -D

# Alt-Arrow resizes
bind-key -n M-Up resize-pane -U 2
bind-key -n M-Down resize-pane -D 2
bind-key -n M-Left resize-pane -L 2
bind-key -n M-Right resize-pane -R 2

# if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
# if-shell 'test "$(uname)" = "Linux"' 'source ~/.tmux-linux.conf'

# Make shift+arrows, ctrl+arrows etc work in Vim.
#set -g xterm-keys on

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

bind R move-window -r\; display-message "Windows reordered..."

# split window keys
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

unbind c
bind-key c new-window -c "#{pane_current_path}"

bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Resize to window instead of entire screen
#setw -g aggressive-resize on
# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Hightlight active pane
set-option -g pane-border-fg green
set-option -g pane-active-border-fg blue
#set-option -g pane-active-border-bg blue
#setw -g pane-active-border-bg default

# Highlight active pane in status bar
set -g status-bg default
set -g status-fg yellow
set -g window-status-current-bg black
set -g window-status-current-fg yellow

# Mouse scrolling
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
#set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

# Scroll History
set -g history-limit 40000

# Set ability to capture on start and restore on exit window data when running an application
#setw -g alternate-screen on

#If on, when a window is closed in a session,
# automatically renumber the other windows in numerical order.
set -g renumber-windows on

set -g @shell_mode 'vi'

# set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
